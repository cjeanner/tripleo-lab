---
- name: check dnf presence
  stat:
    path: /etc/dnf/dnf.conf
  register: dnf_state

- name: ensure sshd does not rely on gssapi
  tags:
    - lab
    - undercloud-bootstrap
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^GSSAPIAuthentication yes$'
    replace: 'GSSAPIAuthentication no'
  register: sshd_config

- name: restart sshd upon config change
  tags:
    - lab
    - undercloud-bootstrap
  service:
    name: sshd
    state: restarted

- name: Remove dracute useless interface
  tags:
    - lab
    - undercloud-bootstrap
  file:
    path: /etc/sysconfig/network-scripts/ifcfg-ens3
    state: absent

- name: ensure that DHCP doesn't overwrite DNS settings (CentOS/RHEL <= 7)
  tags:
    - lab
    - undercloud-bootstrap
  lineinfile:
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    regexp: '^PEERDNS='
    line: PEERDNS=no
    state: present
  when:
    - deploy_ipa|bool
    - ansible_facts['distribution_version'] is version('8.0', 'lt', strict=True)

- name: ensure that DHCP doesn't overwite DNS settings (CentOS/RHEL >= 8)
  tags:
    - lab
    - undercloud-bootstrap
  lineinfile:
    path: /etc/NetworkManager/NetworkManager.conf
    regexp: '^dns='
    insertafter: '^[main]'
    line: 'dns=none'
  when:
    - deploy_ipa|bool
    - ansible_facts['distribution_version'] is version('8.0', 'gt', strict=False)

- name: update /etc/resolv.conf
  tags:
    - lab
    - undercloud-bootstrap
  template:
    src: "resolv.conf.j2"
    dest: "/etc/resolv.conf"
  when:
    - deploy_ipa|bool

- name: Set selinux to permissive
  tags:
    - lab
    - undercloud-bootstrap
  selinux:
    state: permissive
    policy: targeted
  when:
    - disable_selinux|bool

- name: Persist permissive
  tags:
    - lab
    - undercloud-bootstrap
  when:
    - disable_selinux|bool
  copy:
    dest: /etc/selinux/config
    content: |
      SELINUX=permissive
      SELINUXTYPE=targeted

- name: set hostname properly
  tags:
    - lab
    - undercloud-bootstrap
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 {{ undercloud_hostname }} localhost.{{ domain }} undercloud localhost"
    regexp: '^127\.0\.0\.1'

- name: set up custom repositories
  tags:
    - lab
    - undercloud-bootstrap
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.name }}"
    file: "{{ item.file | default(item.name) }}"
    baseurl: "{{ item.uri }}"
    gpgcheck: "{{ item.gpg |default(omit) }}"
    priority: "{{ item.priority |default(omit) }}"
    gpgkey: "{{ item.gpgkey |default(omit) }}"
  loop: "{{ custom_repositories }}"

- name: Set up custom dnf module streams
  tags:
    - lab
    - undercloud-bootstrap
  when: dnf_state.stat.exists
  dnf:
    name: "{{ item }}"
    state: present
  loop: "{{ dnf_modules_stream |default([]) }}"

- name: add static routes for overclouds public endpoints
  tags:
    - lab
    - undercloud-bootstrap
  when:
    - hostvars['builder']['nat_vm_addr'] is defined
  register: set_overcloud_pub_routes
  template:
    dest: /etc/sysconfig/network-scripts/route-eth0
    src: undercloud-static-routes.j2

- name: add static route to the live system if needed
  tags:
    - lab
    - undercloud-bootstrap
  when:
    - set_overcloud_pub_routes is defined
    - set_overcloud_pub_routes is changed
  command: ip ro add 192.168.{{ item + 100 }}.0/24 via {{ hostvars['builder']['nat_vm_addr'].stdout|replace('/24','') }} dev eth0
  loop: "{{ overclouds_range }}"

- name: Inject custom PS1
  tags:
    - lab
    - undercloud-bootstrap
  copy:
    dest: /etc/profile.d/ps1.sh
    content: |
      # Set PS1 to reflect OS version and deploy type
      {% if standalone | default(false) | bool %}
      export PS1='[{{ ansible_facts['distribution'] }}-{{ ansible_facts['distribution_version'] }} - \u@standalone \W]\$ '
      {% else %}
      export PS1='[{{ ansible_facts['distribution'] }}-{{ ansible_facts['distribution_version'] }} - \u@\h \W]\$ '
      {% endif %}
