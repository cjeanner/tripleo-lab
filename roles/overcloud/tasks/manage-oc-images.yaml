---
- name: Get CentOS based OC images
  tags:
    - lab
    - overcloud
    - baremetal
    - overcloud-images
  when:
    - base_image == 'centos'
  import_tasks: centos-overcloud.yaml

- name: Get RHEL based OC images
  tags:
    - lab
    - overcloud
    - baremetal
    - overcloud-images
  when:
    - base_image != 'centos'
  import_tasks: rhel-overcloud.yaml

- name: Check for raw image availability
  tags:
    - lab
    - overcloud
    - baremetal
    - overcloud-images
  register: raw_image
  stat:
    path: /home/stack/overcloud_imgs/overcloud-full.raw

- name: Check for hardened-uefi-full
  tags:
    - lab
    - overcloud
    - baremetal
    - overcloud-images
  register: hardened_uefi
  stat:
    path: /home/stack/overcloud_imgs/overcloud-hardened-uefi-full.qcow2

- name: Set some facts
  tags:
    - lab
    - overcloud
    - baremetal
    - overcloud-images
  set_fact:
    new_oc_image: "{{ uncompress_centos_img is changed or uncompress_rhel_img is changed }}"
    oc_image_name: >-
      {%- if hardened_uefi.stat.exists -%}
      overcloud-hardened-uefi-full.qcow2
      {%- elif raw_image.stat.exists -%}
      overcloud-full.raw
      {%- else -%}
      overcloud-full.qcow2
      {%- endif -%}

- name: Detect if "--selinux-relabel" exists in the options
  tags:
    - lab
    - overcloud
    - overcloud-images
  register: selinux_relabel_option
  shell: virt-sysprep --help | grep '\-\-selinux-relabel'
  failed_when:
    - selinux_relabel_option.rc not in [0, 1]

- name: "Inject root password in OC image {{ oc_image_name }}"
  tags:
    - lab
    - overcloud
    - overcloud-images
  when:
    - new_oc_image|bool
  shell: |
    LIBGUESTFS_BACKEND="direct" virt-sysprep -a /home/stack/overcloud_imgs/{{ oc_image_name }} \
      {{ (selinux_relabel_option.rc == 0) | ternary('--selinux-relabel', '') }} --root-password "password:{{undercloud_password}}" \
      --enable customize \
      --ssh-inject "root:file:/home/stack/.ssh/authorized_keys" \
      --truncate /etc/machine-id &> /home/stack/overcloud_imgs/overcloud-password.done
  args:
    creates: "/home/stack/overcloud_imgs/overcloud-password.done"


- name: "Modify overcloud image {{ oc_image_name }}"
  tags:
    - lab
    - overcloud
    - overcloud-images
  when:
    - overcloud_image_update|bool
    - new_oc_image|bool
  shell: |
    LIBGUESTFS_BACKEND="direct" virt-sysprep -a /home/stack/overcloud_imgs/{{ oc_image_name }} \
      --copy-in /etc/yum.repos.d/:/etc/ \
      --copy-in /etc/dnf/dnf.conf:/etc/dnf/ \
      --copy-in /etc/yum.conf:/etc/ \
      --copy-in /etc/environment:/etc/ \
      --copy-in /etc/selinux/config:/etc/selinux/ \
      --copy-in /usr/local/src/:/usr/local/ \
      --firstboot /tmp/overcloud-firstboot \
      --update \
      {{ (selinux_relabel_option.rc == 0) | ternary('--selinux-relabel', '') }} --enable customize \
      --network \
      --truncate /etc/machine-id &> /home/stack/overcloud_imgs/overcloud-full.done
  args:
    creates: "/home/stack/overcloud_imgs/overcloud-full.done"

- name: Inject custom RPMs in OC image
  tags:
    - lab
    - overcloud
    - overcloud-images
  when:
    - oc_image_rpms is defined
    - oc_image_rpms | length > 0
  shell: |
    LIBGUESTFS_BACKEND="direct" virt-sysprep -a /home/stack/overcloud_imgs/{{ oc_image_name }} \
      --install {{ oc_image_rpms|join(',') }}\
      {{ (selinux_relabel_option.rc == 0) | ternary('--selinux-relabel', '') }} --enable customize \
      --network \
      --truncate /etc/machine-id &> /home/stack/overcloud_imgs/overcloud-full.modified
  args:
    creates: /home/stack/overcloud_imgs/overcloud-full.modified

- name: Install newrelic on OC image if needed
  tags:
    - lab
    - overcloud
    - overcloud-images
  when:
    - newrelic | bool
  shell: |
    LIBGUESTFS_BACKEND="direct" virt-sysprep -a /home/stack/overcloud_imgs/{{ oc_image_name }} \
      --network --copy-in /usr/local/bin/lab-newrelic:/usr/local/bin/ \
      --run /usr/local/bin/lab-newrelic \
      {{ (selinux_relabel_option.rc == 0) | ternary('--selinux-relabel', '') }} --truncate /etc/machine-id &> /home/stack/overcloud_imgs/overcloud-newrelic.log
  args:
    creates: /home/stack/overcloud_imgs/overcloud-newrelic.log
