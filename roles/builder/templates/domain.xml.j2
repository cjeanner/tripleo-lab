{%- set global_uefi = (uefi|default(true)|bool and not item.0.autostart|default(false)|bool) -%}
<domain type='kvm'>
  <name>{{vm_prefix}}-oc{{ item.1 }}-{{item.0.name}}</name>
  <memory unit='MB'>{{item.0.memory}}</memory>
  <vcpu placement='static'>{{item.0.cpu}}</vcpu>
  <os>
{% if global_uefi|bool -%}
    <type arch='x86_64' machine='q35'>hvm</type>
    <loader readonly="yes" secure="no" type="pflash">/usr/share/edk2/ovmf/OVMF_CODE.secboot.fd</loader>
    <nvram template='/usr/share/edk2/ovmf/OVMF_VARS.fd'/>
{% else -%}
    <type arch='x86_64' machine='pc'>hvm</type>
{% endif -%}
{% if item.0.autostart|default(false)|bool -%}
    <boot dev='hd'/>
{% endif -%}
    <bios useserial='yes' rebootTimeout='0'/>
  </os>
  <cpu mode='host-passthrough' check='none'/>
  <clock offset='utc'>
    <timer name='rtc' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='delay'/>
    <timer name='hpet' present='no'/>
  </clock>
  <features>
    <acpi/>
    <apic/>
  </features>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='{{basedir}}/workload/{{vm_prefix}}-oc{{item.1}}-{{item.0.name}}.qcow2'/>
      <target dev='sda'/>
      {% if item.0.iotune is defined %}
      <iotune>
      {% for option in item.0.iotune %}
      <{{option.tune }}>{{ option.value }}</{{ option.tune }}>
      {% endfor %}
      </iotune>
      {% endif %}
    </disk>
    {% if item.0.swap is defined %}
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw'/>
      <source file='{{basedir}}/workload/{{vm_prefix}}-oc{{item.1}}-{{item.0.name}}-swap.img'/>
      <target dev='sdb'/>
      {% if item.0.iotune is defined %}
      <iotune>
      {% for option in item.0.iotune %}
      <{{option.tune }}>{{ option.value }}</{{ option.tune }}>
      {% endfor %}
      </iotune>
      {% endif %}
    </disk>
    {% endif %}
    {% if item.0.name is match('^ceph-.*') %}
    {# exclude 'a' and 'b' from letters as they're taken by root and swap #}
    {% set letters='cdefghijklmnopqrstuvwxyz' %}
    {% for osd in range(0, num_osds) %}
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw'/>
      <source file='{{basedir}}/workload/{{vm_prefix}}-oc{{item.1}}-{{item.0.name}}-osd-{{osd}}.img'/>
      <target dev='sd{{letters[osd]}}'/>
    </disk>
    {% endfor %}
    {% endif %}
    {% for interface in item.0.interfaces %}
    <interface type='network'>
      <source network='{{ interface.network | default('ctlplane') }}'/>
      <mac address='{{ '24:42:%02i'|format(item.1|int) |random_mac }}'/>
      <model type="virtio"/>
    </interface>
    {% endfor %}
    <controller type='usb' index='0' model='ich9-ehci1'>
      <alias name='usb'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x7'/>
    </controller>
    <controller type='usb' index='0' model='ich9-uhci1'>
      <alias name='usb'/>
      <master startport='0'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0' multifunction='on'/>
    </controller>
    <controller type='usb' index='0' model='ich9-uhci2'>
      <alias name='usb'/>
      <master startport='2'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x1'/>
    </controller>
    <controller type='usb' index='0' model='ich9-uhci3'>
      <alias name='usb'/>
      <master startport='4'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x2'/>
    </controller>
{% if global_uefi -%}
    <controller type='pci' index='0' model='pcie-root'>
{% else -%}
    <controller type='pci' index='0' model='pci-root'>
{% endif -%}
      <alias name='pci.0'/>
    </controller>
    <controller type='virtio-serial' index='0'>
      <alias name='virtio-serial0'/>
      <address type='pci'/>
    </controller>
    <serial type='pty'>
      <source path='/dev/pts/1'/>
      <log file="/var/log/libvirt/qemu/{{vm_prefix}}-oc{{item.1}}-{{item.0.name}}-serial.log" append="off"/>
      <target type='isa-serial' port='0'>
        <model name='isa-serial'/>
      </target>
      <alias name='serial0'/>
    </serial>
    <console type='pty' tty='/dev/pts/1'>
      <log file="/var/log/libvirt/qemu/{{vm_prefix}}-oc{{item.1}}-{{item.0.name}}-console.log" append="off"/>
      <source path='/dev/pts/1'/>
      <target type='serial' port='0'/>
      <alias name='serial0'/>
    </console>
    <input type='tablet' bus='usb'>
      <alias name='input0'/>
      <address type='usb' bus='0' port='1'/>
    </input>
    <input type='mouse' bus='ps2'>
      <alias name='input1'/>
    </input>
    <input type='keyboard' bus='ps2'>
      <alias name='input2'/>
    </input>
    <video>
      <model type='virtio' vram='16384' heads='1' primary='yes'/>
      <alias name='video0'/>
      <address type='pci'/>
    </video>
    <memballoon model='virtio'>
      <alias name='balloon0'/>
      <address type='pci'/>
    </memballoon>
    <rng model='virtio'>
      <backend model='random'>/dev/urandom</backend>
      <alias name='rng0'/>
      <address type='pci'/>
    </rng>
  </devices>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>
</domain>
