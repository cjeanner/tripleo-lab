- name: Ensure we get a clean, fresh authorized_keys from root
  tags:
    - always
  copy:
    remote_src: true
    src: /root/.ssh/authorized_keys
    dest: "{{ basedir }}/.ssh/authorized_keys"
    group: "{{ virt_user }}"
    mode: 0600
    owner: "{{ virt_user }}"

- name: execute all as virt_user
  become: true
  become_user: "{{ virt_user }}"
  tags:
    - images
    - undercloud
    - lab
  block:
    - name: Activate swap only if needed
      set_fact:
        enable_swap: "{{ undercloud_swap is defined and undercloud_swap |bool }}"

    - name: Ensure temporary key is removed
      file:
        path: "{{basedir}}/configs/id_ed25519"
        state: absent

    - name: Generate temporary ssh keypair
      command: ssh-keygen -t ed25519 -b 512 -N '' -C 'temporary-shared' -f {{basedir}}/configs/id_ed25519

    - name: Get pub key
      register: temp_pub_key
      slurp:
        path: "{{basedir}}/configs/id_ed25519.pub"

    - name: Inject temporary key
      authorized_key:
        user: "{{ virt_user }}"
        state: present
        key: "{{ temp_pub_key['content']|b64decode }}"

    - name: VM image settings
      environment:
        LIBGUESTFS_BACKEND: direct
      shell: |
        {% if item.0.name is match('^undercloud') -%}
        virt-sysprep -a "{{basedir}}/workload/{{vm_prefix}}-{{ item.0.name }}.qcow2" \
          --hostname {{ undercloud_hostname | lower }} \
        {% else -%}
        virt-sysprep -a "{{basedir}}/workload/{{ vm_prefix }}-oc{{ item.1 }}-{{ item.0.name }}.qcow2" \
          --hostname "{{ vm_prefix }}-oc{{ item.1 }}-{{ item.0.name }}.{{ domain }}" \
        {% endif -%}
          --firstboot-command "growpart /dev/sda {{ root_device }}" \
          --firstboot-command "xfs_growfs {{ growfs_part }}" \
        {% if enable_swap | bool -%}
          --firstboot-command "mkswap /dev/sdb" \
          --firstboot-command "swapon /dev/sdb" \
        {% endif -%}
          --uninstall cloud-init \
          --selinux-relabel \
          --root-password "password:{{undercloud_password}}" \
          --ssh-inject root:file:{{ basedir }}/.ssh/authorized_keys \
          --copy-in {{basedir}}/configs/id_ed25519:/root/.ssh \
          --copy-in {{basedir}}/configs/id_ed25519.pub:/root/.ssh \
          --truncate /etc/machine-id &> \
        {% if item.0.name is match('^undercloud') -%}
          "{{basedir}}/workload/{{vm_prefix }}-{{ item.0.name }}.qcow2.done"
        {% else -%}
          "{{basedir}}/workload/{{vm_prefix }}-oc{{ item.1 }}-{{ item.0.name }}.qcow2.done"
        {% endif -%}
      args:
        creates: >-
          {%- if item.0.name is match('^undercloud') -%}
          {{basedir}}/workload/{{vm_prefix }}-{{ item.0.name }}.qcow2.done
          {%- else -%}
          {{basedir}}/workload/{{vm_prefix}}-oc{{ item.1 }}-{{ item.0.name }}.qcow2.done
          {%- endif -%}
      when:
        - item.0.name is match('^undercloud') or item.0.autostart|default(false)|bool
      loop: "{{ vms|product(overclouds_range)|list }}"
      loop_control:
        label: "{{ item.0.name }}"

