- name: common tags
  tags:
    - vbmc
    - lab
    - builder-bootstrap
  block:

    - name: push vbmcd unit
      when:
        - ansible_facts['python_version'] is version('3.0', 'gt')
      copy:
        src: vbmcd.service
        dest: /etc/systemd/system/virtualbmc.service
        mode: 0644

    - name: create vbmcd user
      when:
        - ansible_facts['python_version'] is version('3.0', 'gt')
      user:
        comment: VirtualBMC Daemon user
        create_home: true
        home: /var/lib/vbmcd
        name: vbmcd
        system: true

    - name: authorize vbmcd on libvirt
      when:
        - ansible_facts['python_version'] is version('3.0', 'gt')
      copy:
        dest: /etc/polkit-1/rules.d/60-vbmcd.rules
        src: vbmc-polkit.rules
        group: root
        mode: 0644
        owner: root
        serole: object_r
        setype: etc_t
        seuser: system_u

    - name: start virtualbmc
      service:
        daemon_reload: true
        name: virtualbmc.service
        enabled: true
        state: started

    - name: get all defined VMs
      virt:
        command: list_vms
      register: list_vms

    - name: Create the Virtual BMCs
      when: item.0.name is not match('^undercloud')
      command: "/usr/local/bin/vbmc add {{vm_prefix}}-oc{{ item.1 }}-{{ item.0.name }} --port {{ '%s-%s-oc-%s'|format(vm_prefix, item.1, item.0.name)|hashed_port }} --libvirt-uri qemu:///system --username ADMIN --password ADMIN"
      args:
        creates: "/var/lib/vbmcd/.vbmc/{{vm_prefix}}-oc{{ item.1 }}-{{ item.0.name }}/config"
      loop: "{{ vms|product(overclouds_range)|list }}"
      loop_control:
        label: "oc{{ item.1 }}-{{ item.0.name }}"
        index_var: vm_idx
      register: vbmc
      ignore_errors: true

    - name: Start the Virtual BMCs (virtualbmc >= 1.4.0+)
      command: "/usr/local/bin/vbmc start {{vm_prefix}}-oc{{ item.1 }}-{{ item.0.name }}"
      loop: "{{ vms|product(overclouds_range)|list }}"
      loop_control:
        label: "oc{{ item.1 }}-{{ item.0.name }}"
      ignore_errors: true
      when:
        - vbmc.changed
        - item.0.name is not match('^undercloud')

    - name: Manage iptables on older centos release
      when:
        - ansible_facts['distribution_version'] is version('8.0', 'lt')
      block:
        - name: Open port on libvirt interface for each node
          when:
            - item.0.name is not match('^undercloud')
          iptables:
            action: insert
            chain: INPUT
            comment: "allow vbmc access from undercloud"
            destination: "192.168.122.1"
            destination_port: "{{ '%s-%s-oc-%s'|format(vm_prefix, item.1, item.0.name)|hashed_port }}"
            jump: ACCEPT
            protocol: udp
          loop: "{{ vms|product(overclouds_range)|list }}"
          loop_control:
            label: "oc{{ item.1 }}-{{ item.0.name }}"
            index_var: vm_idx

    - name: Manage firewalld on newer centos release
      when:
        - ansible_facts['distribution_version'] is version('8.0', 'gt')
      block:
        - name: Open firewalld in libvirt zone for each node
          when:
            - item.0.name is not match('^undercloud')
          firewalld:
            port: "{{ '%s-%s-oc-%s'|format(vm_prefix, item.1, item.0.name)|hashed_port }}/udp"
            permanent: false
            zone: libvirt
            state: enabled
          loop: "{{ vms|product(overclouds_range)|list }}"
          loop_control:
            label: "oc{{ item.1 }}-{{ item.0.name }}"
            index_var: vm_idx
