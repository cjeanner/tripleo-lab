---

- name: all tasks run as virt_user
  become: yes
  become_user: "{{ virt_user }}"
  tags:
    - domains
    - lab
  block:
    - name: define nodes
      virt:
        name: "{{ item.name }}"
        command: define
        xml: "{{ lookup('template', 'domain.xml.j2') }}"
        uri: "qemu:///system"
      loop: "{{ vms }}"
      loop_control:
        label: "{{item.name}}"

    - name: start domains
      tags:
        - start-domains
      virt:
        name: "{{ item.name }}"
        state: running
        uri: "qemu:///system"
      loop: "{{ vms }}"
      loop_control:
        label: "{{item.name}}"
      when:
        - item.autostart is defined
        - item.autostart|bool

    - name: fetch associated IP address for running domains
      tags:
        - start-domains
        - gen-ssh-config
        - inventory
      shell: |
        sleep 30 && \
        virsh --connect qemu:///system domifaddr "{{item.name}}" | \
        awk '/ipv4/ {print $4}'
      register: ip_address
      loop: "{{ vms }}"
      loop_control:
        label: "{{item.name}}"
      when:
        - item.autostart is defined
        - item.autostart|bool

    - name: print out the ip_address
      debug:
        msg: "Retrieved ip_address value: {{ip_address.results[0]}}"

    - name: ensure variable ip_address is not empty
      tags:
        - start-domains
        - gen-ssh-config
      fail:
        msg: "No IP address for undercloud"
      when:
        - ip_address.results[0].stdout == ""

    - name: populate ssh_config
      tags:
        - start-domains
        - gen-ssh-config
      template:
        dest: "{{basedir}}/.ssh/config"
        src: ssh_config.j2
        group: "{{virt_user}}"
        mode: 0644
        owner: "{{virt_user}}"

- name: provision hosts file
  tags:
    - domains
    - start-domains
    - lab
  lineinfile:
    line: "{{item.stdout|replace('/24','')}} {{item.item.name}}"
    path: /etc/hosts
    regexp: "{{item.item.name}}$"
    state: present
  loop: "{{ ip_address.results }}"
  loop_control:
    label: "{{item.item.name}}"
  when: item.stdout is defined

- name: inject domains in inventory
  tags:
    - domains
    - start-domains
    - inventory
    - lab
  add_host:
    hostname: "{{item.item.name}}"
    ansible_host: "{{item.stdout|replace('/24','')}}"
  loop: "{{ ip_address.results }}"
  loop_control:
    label: "{{item.item.name}}"
  when: item.stdout is defined

- name: inject config on ansible host
  tags:
    - domains
    - start-domains
    - inventory
    - gen-ssh-config
    - lab
  local_action:
    module: blockinfile
    path: ~/.ssh/config
    marker: "## {mark} {{item.item.name}}"
    block: |
      Host {{item.item.name}} {{item.stdout|replace('/24','')}}
        ProxyCommand ssh -o 'ForwardAgent yes' {{virt_user}}@{{ansible_host}} 'ssh-add && nc {{item.stdout|replace('/24','')}} %p'
        User root
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null
  loop: "{{ ip_address.results }}"
  loop_control:
    label: "{{item.item.name}}"
  when: item.stdout is defined
